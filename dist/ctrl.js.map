{"version":3,"sources":["../src/ctrl.js"],"names":["getColorForValue","data","value","i","thresholds","length","colorMap","_","first","MetricsPanelCtrl","$","kbn","config","TimeSeries","panelDefaults","unitFormats","getUnitFormats","trendstat","subtext","leftSideShowSubtext","rightSideShowSubtext","links","datasource","maxDataPoints","interval","targets","cacheTimeout","format","valueFontSize","valueFontType","valueFooterFontSize","valueFooterFontType","prefix","prefixFontSize","postfix","postfixFontSize","nullText","decimals","valueMaps","op","text","mappingTypes","name","rangeMaps","from","to","mappingType","nullPointMode","valueName","NOTprefixFontSize","NOTvalueFontSize","NOTpostfixFontSize","colorBackground","colorValue","colors","sparkline","show","full","lineColor","fillColor","gauge","minValue","maxValue","thresholdMarkers","thresholdLabels","TrendStatPanelCtrl","$scope","$injector","$http","$location","defaults","panel","http","valueNameOptions","currentValueFormatted","currentValueFooterText","titleText","fontSizesPx","fontSizesPct","events","on","onDataReceived","bind","onDataError","onInitEditMode","panels","grafanaBootData","settings","thisPanel","pluginId","thisPanelPath","baseUrl","optionsPath","addEditorTab","trendOptionsPath","mappingsPath","map","index","indexOf","splice","render","push","rangeMap","isNumber","scaledDecimals","delta","dec","Math","floor","log","LN10","magn","pow","norm","size","result","max","flotpairs","series","error","Error","message","JSON","stringify","lastPoint","last","datapoints","lastValue","isArray","valueRounded","valueFormated","alias","isString","escape","stats","current","decimalInfo","getDecimalsForValue","formatFunc","valueFormats","roundValue","previousIndex","previousValue","prevDecimalInfo","prevFormatFunc","previousValueFormatted","previousValueRounded","trendPercentage","xstats","trendAvgValue","avg","trendAvgValueFormatted","trendAvgPercentage","trendTimeStep","timeStep","trendIcon","getTrendIcon","scopedVars","extend","__name","label","parseFloat","valueFormatted","subItem","err","dataList","seriesHandler","setValues","seriesData","target","getFlotPairs","options","background","tmp","historicalValue","currentValue","icon","color","epoch","d","Date","setUTCSeconds","toISOString","scope","elem","attrs","ctrl","linkSrv","$timeout","templateSrv","linkInfo","$panelContainer","find","leftSideElem","setElementHeight","css","height","split","strVale","Number","trim","currentValueRaw","currentValueRounded","previousValueRaw","isNaN","currentValueBackgroundColor","valueColor","addSparkline","addGauge","applyColoringThresholds","valueString","getSpan","className","fontSize","replace","getBigValueHtml","body","getValueText","width","invalidGaugeRange","remove","plotCanvas","plotCss","top","margin","position","bgColor","bootData","user","lightTheme","fontScale","parseInt","dimension","min","gaugeWidth","thresholdMarkersWidth","gauges","border","shadow","frame","layout","thresholdWidth","cell","threshold","values","font","formatter","family","append","plotSeries","plot","setTimeout","bottom","left","dynamicHeightMargin","round","legend","lines","fill","lineWidth","yaxes","xaxis","mode","range","valueOf","grid","hoverable","renderingCompleted","templateUrl"],"mappings":"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","file":"ctrl.js","sourcesContent":["import {\n  MetricsPanelCtrl\n} from 'app/plugins/sdk';\nimport _ from 'lodash';\nimport $ from 'jquery';\nimport kbn from 'app/core/utils/kbn';\nimport config from 'app/core/config';\nimport TimeSeries from 'app/core/time_series2';\n\nimport './libs/angular-aria/angular-aria.min.js';\nimport './libs/angular-animate/angular-animate.min.js';\nimport './libs/angular-material/angular-material.min.js';\nimport './libs/angular-material/angular-material.min.css!';\nimport './css/font-awesome.min.css!';\nimport './css/panel.css!';\n\n\nconst panelDefaults = {\n  unitFormats: kbn.getUnitFormats(),\n  trendstat:  {\n    subtext: '',\n    leftSideShowSubtext: true,\n    rightSideShowSubtext: true,\n  },\n  links: [],\n  datasource: null,\n  maxDataPoints: 100,\n  interval: null,\n  targets: [{}],\n  cacheTimeout: null,\n  format: 'none',\n  valueFontSize: 28,\n  valueFontType: 'default',\n  valueFooterFontSize: 12,\n  valueFooterFontType: 'default',\n  prefix: '',\n  prefixFontSize: 28,\n  postfix: '',\n  postfixFontSize: 28,\n  nullText: null,\n  decimals: 2, // decimal precision\n  valueMaps: [\n    {\n      value: 'null',\n      op: '=',\n      text: 'N/A'\n    }\n   ],\n  mappingTypes: [\n    {\n      name: 'value to text',\n      value: 1\n    },\n    {\n      name: 'range to text',\n      value: 2\n    },\n   ],\n  rangeMaps: [\n    {\n      from: 'null',\n      to: 'null',\n      text: 'N/A'\n    }\n   ],\n  mappingType: 1,\n  nullPointMode: 'connected',\n  valueName: 'avg',\n  NOTprefixFontSize: '50%',\n  NOTvalueFontSize: '80%',\n  NOTpostfixFontSize: '50%',\n  thresholds: '',\n  colorBackground: false,\n  colorValue: false,\n  colors: [\"rgba(245, 54, 54, 0.9)\", \"rgba(237, 129, 40, 0.89)\", \"rgba(50, 172, 45, 0.97)\"],\n  sparkline: {\n    show: false,\n    full: false,\n    lineColor: 'rgb(31, 120, 193)',\n    fillColor: 'rgba(31, 118, 189, 0.18)',\n  },\n  gauge: {\n    show: false,\n    minValue: 0,\n    maxValue: 100,\n    thresholdMarkers: true,\n    thresholdLabels: false\n  }\n};\n\nexport class TrendStatPanelCtrl extends MetricsPanelCtrl {\n\n  constructor($scope, $injector, $http, $location) {\n    super($scope, $injector);\n    _.defaults(this.panel, panelDefaults);\n    this.http = $http;\n    this.valueNameOptions = ['min','max','avg', 'current', 'total', 'name', 'first', 'delta', 'range'];\n    this.panel.currentValueFormatted = \"\";\n    this.panel.currentValueFooterText = \"Web Visits from Social Media\";\n    this.panel.titleText = \"Total Social Media Conversations (Last 30 Days)\";\n    this.fontSizesPx = [\n      '4px', '5px', '6px', '7px', '8px', '9px', '10px',\n      '11px', '12px', '13px', '14px', '15px', '16px', '17px', '18px', '19px', '20px',\n      '22px', '24px', '26px', '28px', '30px', '32px', '34px', '36px', '38px', '40px',\n      '42px', '44px', '46px', '48px', '50px', '52px', '54px', '56px', '58px', '60px',\n      '62px', '64px', '66px', '68px', '70px'];\n    this.fontSizesPct = [\n      '10%', '20%', '30%', '40%', '50%', '60%', '70%', '80%', '90%', '100%',\n      '110%', '120', '130%', '140%', '150%', '160%', '170%', '180%', '190%', '200%'];\n    this.events.on('data-received', this.onDataReceived.bind(this));\n    this.events.on('data-error', this.onDataError.bind(this));\n    this.events.on('data-snapshot-load', this.onDataReceived.bind(this));\n    this.events.on('init-edit-mode', this.onInitEditMode.bind(this));\n  }\n\n  // setup the editor\n  onInitEditMode() {\n    // determine the path to this plugin\n    var panels = grafanaBootData.settings.panels;\n    var thisPanel = panels[this.pluginId];\n    var thisPanelPath = thisPanel.baseUrl + '/';\n    // add the relative path to the partial\n    var optionsPath = thisPanelPath + 'partials/editor.options.html';\n    this.addEditorTab('Options', optionsPath, 2);\n    var trendOptionsPath = thisPanelPath + 'partials/editor.trendoptions.html';\n    this.addEditorTab('Trend Options', trendOptionsPath, 3);\n    var mappingsPath = thisPanelPath + 'partials/editor.mappings.html';\n    this.addEditorTab('Value Mappings', mappingsPath, 4);\n    this.unitFormats = kbn.getUnitFormats();\n  }\n\n  removeValueMap(map) {\n    var index = _.indexOf(this.panel.valueMaps, map);\n    this.panel.valueMaps.splice(index, 1);\n    this.render();\n  }\n\n  addValueMap() {\n    this.panel.valueMaps.push({\n      value: '',\n      op: '=',\n      text: ''\n    });\n  }\n\n  removeRangeMap(rangeMap) {\n    var index = _.indexOf(this.panel.rangeMaps, rangeMap);\n    this.panel.rangeMaps.splice(index, 1);\n    this.render();\n  }\n\n  addRangeMap() {\n    this.panel.rangeMaps.push({\n      from: '',\n      to: '',\n      text: ''\n    });\n  }\n\n  getDecimalsForValue(value) {\n    if (_.isNumber(this.panel.decimals)) {\n      return {\n        decimals: this.panel.decimals,\n        scaledDecimals: null\n      };\n    }\n\n    var delta = value / 2;\n    var dec = -Math.floor(Math.log(delta) / Math.LN10);\n\n    var magn = Math.pow(10, -dec),\n      norm = delta / magn, // norm is between 1.0 and 10.0\n      size;\n\n    if (norm < 1.5) {\n      size = 1;\n    } else if (norm < 3) {\n      size = 2;\n      // special case for 2.5, requires an extra decimal\n      if (norm > 2.25) {\n        size = 2.5;\n        ++dec;\n      }\n    } else if (norm < 7.5) {\n      size = 5;\n    } else {\n      size = 10;\n    }\n\n    size *= magn;\n\n    // reduce starting decimals if not needed\n    if (Math.floor(value) === value) {\n      dec = 0;\n    }\n\n    var result = {};\n    result.decimals = Math.max(0, dec);\n    result.scaledDecimals = result.decimals - Math.floor(Math.log(size) / Math.LN10) + 2;\n    return result;\n  }\n\n  setValues(data) {\n      data.flotpairs = [];\n\n      if (this.series.length > 1) {\n        var error = new Error();\n        error.message = 'Multiple Series Error';\n        error.data = 'Metric query returns ' + this.series.length +\n          ' series. TrendStat Panel expects a single series.\\n\\nResponse:\\n'+JSON.stringify(this.series);\n        throw error;\n      }\n      if (this.series && this.series.length > 0) {\n        var lastPoint = _.last(this.series[0].datapoints);\n        var lastValue = _.isArray(lastPoint) ? lastPoint[0] : null;\n\n        if (this.panel.valueName === 'name') {\n          data.value = 0;\n          data.valueRounded = 0;\n          data.valueFormated = this.series[0].alias;\n        } else if (_.isString(lastValue)) {\n          data.value = 0;\n          data.valueFormated = _.escape(lastValue);\n          data.valueRounded = 0;\n        } else {\n          // TODO: avg etc\n          //data.value = this.series[0].stats[this.panel.valueName];\n          data.value = this.series[0].stats.current;\n          data.flotpairs = this.series[0].flotpairs;\n\n          var decimalInfo = this.getDecimalsForValue(data.value);\n          var formatFunc = kbn.valueFormats[this.panel.format];\n          data.valueFormated = formatFunc(data.value, decimalInfo.decimals, decimalInfo.scaledDecimals);\n          data.valueRounded = kbn.roundValue(data.value, decimalInfo.decimals);\n        }\n        //data.trendAvgValue = ctrl.series[0].stats.avg;\n        var previousIndex = this.series[0].datapoints.length - 2;\n        data.previousValue = this.series[0].datapoints[previousIndex][0];\n        var prevDecimalInfo = this.getDecimalsForValue(data.previousValue);\n        var prevFormatFunc = kbn.valueFormats[this.panel.format];\n        data.previousValueFormatted = prevFormatFunc(data.previousValue, prevDecimalInfo.decimals, prevDecimalInfo.scaledDecimals);\n        data.previousValueRounded = kbn.roundValue(data.previousValue, prevDecimalInfo.decimals);\n\n        // calculate change by percentile\n        data.trendPercentage = ((data.value - data.previousValue) / data.previousValue) * 100;\n        data.trendPercentage = kbn.roundValue(data.trendPercentage, prevDecimalInfo.decimals);\n        //debugger;\n        var xstats = this.series[0].stats;\n        data.trendAvgValue = this.series[0].stats.avg;\n        data.trendAvgValueFormatted = prevFormatFunc(data.trendAvgValue, prevDecimalInfo.decimals, prevDecimalInfo.scaledDecimals);\n\n        data.trendAvgPercentage = ((data.value - data.trendAvgValue) / data.trendAvgValue) * 100;\n        data.trendAvgPercentage = kbn.roundValue(data.trendAvgPercentage, prevDecimalInfo.decimals);\n        data.trendTimeStep = this.series[0].stats.timeStep;\n\n        // for previous value trend\n        //data.trendIcon = this.getTrendIcon(data.previousValue, data.value);\n        // for avg value trend\n        data.trendIcon = this.getTrendIcon(data.trendAvgValue, data.value);\n\n        // Add $__name variable for using in prefix or postfix\n        data.scopedVars = _.extend({}, this.panel.scopedVars);\n        data.scopedVars.__name = {value: this.series[0].label};\n      }\n\n      // check value to text mappings if its enabled\n      if (this.panel.mappingType === 1) {\n        for (var i = 0; i < this.panel.valueMaps.length; i++) {\n          var map = this.panel.valueMaps[i];\n          // special null case\n          if (map.value === 'null') {\n            if (data.value === null || data.value === void 0) {\n              data.valueFormated = map.text;\n              return;\n            }\n            continue;\n          }\n\n          // value/number to text mapping\n          var value = parseFloat(map.value);\n          if (value === data.valueRounded) {\n            data.valueFormated = map.text;\n            return;\n          }\n        }\n      } else if (this.panel.mappingType === 2) {\n        for (let i = 0; i < this.panel.rangeMaps.length; i++) {\n          let map = this.panel.rangeMaps[i];\n          // special null case\n          if (map.from === 'null' && map.to === 'null') {\n            if (data.value === null || data.value === void 0) {\n              data.valueFormated = map.text;\n              return;\n            }\n            continue;\n          }\n\n          // value/number to range mapping\n          var from = parseFloat(map.from);\n          var to = parseFloat(map.to);\n          if (to >= data.valueRounded && from <= data.valueRounded) {\n            data.valueFormated = map.text;\n            return;\n          }\n        }\n      }\n\n      if (data.value === null || data.value === void 0) {\n        data.valueFormated = \"no value\";\n      }\n    }\n\n  getValueText() {\n    return this.data.valueFormatted;\n  }\n\n  setUnitFormat(subItem) {\n    this.panel.format = subItem.value;\n    this.render();\n  }\n\n  onDataError(err) {\n    this.onDataReceived([]);\n  }\n\n  onDataReceived(dataList) {\n    this.series = dataList.map(this.seriesHandler.bind(this));\n    var data = {};\n    this.setValues(data);\n    this.data = data;\n    //console.log(\"Data value: \" + data.value + \" formatted: \" + data.valueFormatted + \" rounded: \" + data.valueRounded);\n    // var fmtTxt = kbn.valueFormats[this.panel.format];\n    // console.log(\"Format: \" + fmtTxt);\n    //this.gaugeObject.updateGauge(data.value, data.valueFormatted, data.valueRounded);\n    this.render();\n  }\n\n  seriesHandler(seriesData) {\n    var series = new TimeSeries({\n      datapoints: seriesData.datapoints,\n      alias: seriesData.target,\n    });\n    series.flotpairs = series.getFlotPairs(this.panel.nullPointMode);\n    return series;\n  }\n\n  setColoring(options) {\n    if (options.background) {\n      this.panel.colorValue = false;\n      this.panel.colors = ['rgba(71, 212, 59, 0.4)', 'rgba(245, 150, 40, 0.73)', 'rgba(225, 40, 40, 0.59)'];\n    } else {\n      this.panel.colorBackground = false;\n      this.panel.colors = ['rgba(50, 172, 45, 0.97)', 'rgba(237, 129, 40, 0.89)', 'rgba(245, 54, 54, 0.9)'];\n    }\n    this.render();\n  }\n\n  invertColorOrder() {\n    var tmp = this.panel.colors[0];\n    this.panel.colors[0] = this.panel.colors[2];\n    this.panel.colors[2] = tmp;\n    this.render();\n  }\n\n  getTrendIcon(historicalValue, currentValue) {\n    var icon = \"fa fa-square\";\n    if (currentValue > historicalValue) {\n      icon = \"fa fa-arrow-up\";\n    }\n    if (currentValue < historicalValue) {\n      icon = \"fa fa-arrow-down\";\n    }\n    if (currentValue === historicalValue) {\n      icon = \"fa fa-fw\";\n    }\n    // other icon sets\n    // fa-exclamation-triangle\n    // fa-exclamation-circle\n    // fa-fire\n    // fa-flag\n    // fa-thumbs-up\n    // fa-thumbs-down\n    // fa-chevron-circle-up fa-chevron-circle-down\n    // fa-chevron-up fa-chevron-down\n    // fa-angle-double-down fa-angle-double-up fa-angle-down fa-angle-up\n    // fa-arrow-circle-up fa-arrow-circle-down\n    // fa-arrow-circle-o-up fa-arrow-circle-o-down\n    // fa-caret-up fa-caret-down\n    return icon;\n  }\n\n  getStatusColor(value) {\n    var color = \"yellow\";\n    switch (value) {\n      case 0:\n        color = \"green\";\n        break;\n      case 1:\n        color = \"yellow\";\n        break;\n      case 2:\n        color = \"red\";\n        break;\n      default:\n        color = \"yellow\";\n        break;\n    }\n    return color;\n  }\n\n  convertTime(epoch) {\n    var d = new Date(0);\n    d.setUTCSeconds(epoch);\n    return d.toISOString();\n  }\n\n\n  link(scope, elem, attrs, ctrl) {\n    var $location = this.$location;\n    var linkSrv = this.linkSrv;\n    var $timeout = this.$timeout;\n    var panel = ctrl.panel;\n    var templateSrv = this.templateSrv;\n    var data, linkInfo;\n    var $panelContainer = elem.find('.panel-container');\n    elem = elem.find('.trendstat-panel');\n    var leftSideElem = elem.find('.trendstat-panel-left-side');\n    function setElementHeight() {\n      elem.css('height', ctrl.height + 'px');\n    }\n\n    function render() {\n      if (!ctrl.data) {\n        return;\n      }\n\n      data = ctrl.data;\n      // get thresholds\n      data.thresholds = panel.thresholds.split(',').map(function(strVale) {\n        return Number(strVale.trim());\n      });\n      data.colorMap = panel.colors;\n      //debugger;\n\n      setElementHeight();\n      //var body = panel.gauge.show ? '' : getBigValueHtml();\n      panel.currentValueRaw = data.value;\n      panel.currentValueRounded = data.valueRounded;\n      panel.currentValueFormatted = data.valueFormated;\n      panel.previousValueRaw = data.previousValue;\n      panel.previousValueFormatted = data.previousValueFormatted;\n      panel.previousValueRounded = data.previousValueRounded;\n      panel.trendIcon = data.trendIcon;\n      panel.trendPercentage = data.trendPercentage;\n      panel.trendAvgPercentage = data.trendAvgPercentage;\n      panel.trendAvgValue = data.trendAvgValue;\n      panel.trendAvgValueFormatted = data.trendAvgValueFormatted;\n\n      panel.trendTimeStep = data.trendTimeStep;\n\n      //var meh1 = ctrl.series[0].stats.avg;\n      //var meh2 = ctrl.series[0].stats.current;\n      //debugger;\n\n      if (panel.colorBackground && !isNaN(data.valueRounded)) {\n        let color = getColorForValue(data, data.valueRounded);\n        if (color) {\n          panel.currentValueBackgroundColor = color;\n        }\n      } else {\n        panel.currentValueBackgroundColor = '';\n      }\n\n      if (panel.colorValue && !isNaN(data.valueRounded)) {\n        let color = getColorForValue(data, data.valueRounded);\n        if (color) {\n          panel.valueColor = color;\n        }\n      } else {\n        panel.valueColor = '';\n      }\n\n      if (panel.sparkline.show) {\n        addSparkline();\n      }\n\n      if (panel.gauge.show) {\n        addGauge();\n      }\n      //elem.toggleClass('pointer', panel.links.length > 0);\n\n      //if (panel.links.length > 0) {\n      //  linkInfo = linkSrv.getPanelLinkAnchorInfo(panel.links[0], data.scopedVars);\n      //} else {\n      //  linkInfo = null;\n      //}\n    } // end render()\n\n    function applyColoringThresholds(value, valueString) {\n      if (!panel.colorValue) {\n        return valueString;\n      }\n\n      var color = getColorForValue(data, value);\n      if (color) {\n        return '<span style=\"color:' + color + '\">'+ valueString + '</span>';\n      }\n\n      return valueString;\n    }\n\n    function getSpan(className, fontSize, value)  {\n      value = templateSrv.replace(value, data.scopedVars);\n      return '<span class=\"' + className + '\" style=\"font-size:' + fontSize + '\">' +\n        value + '</span>';\n    }\n\n\n    function getBigValueHtml() {\n       var body = '<div class=\"singlestat-panel-value-container\">';\n\n       if (panel.prefix) { body += getSpan('singlestat-panel-prefix', panel.prefixFontSize, panel.prefix); }\n\n       var value = applyColoringThresholds(data.value, data.valueFormated);\n       body += getSpan('singlestat-panel-value', panel.valueFontSize, value);\n\n       if (panel.postfix) { body += getSpan('singlestat-panel-postfix', panel.postfixFontSize, panel.postfix); }\n\n       body += '</div>';\n\n       return body;\n     }\n\n     function getValueText() {\n       var result = panel.prefix ? panel.prefix : '';\n       result += data.valueFormated;\n       result += panel.postfix ? panel.postfix : '';\n\n       return result;\n     }\n\n     function addGauge() {\n         var width = leftSideElem.width();\n         var height = leftSideElem.height();\n\n         ctrl.invalidGaugeRange = false;\n         if (panel.gauge.minValue > panel.gauge.maxValue) {\n           ctrl.invalidGaugeRange = true;\n           return;\n         }\n         // delete the old gauge if it exits\n         $(\".trendstat-panel-left-side-gauge\").remove();\n\n         var plotCanvas = $('<div class=\"trendstat-panel-left-side-gauge\"></div>');\n\n         var plotCss = {\n           top: '10px',\n           margin: 'auto',\n           position: 'absolute',\n           height: (height * 0.9) + 'px',\n           width:  width + 'px'\n         };\n\n         plotCanvas.css(plotCss);\n\n         var thresholds = [];\n         for (var i = 0; i < data.thresholds.length; i++) {\n           thresholds.push({\n             value: data.thresholds[i],\n             color: data.colorMap[i]\n           });\n         }\n         thresholds.push({\n           value: panel.gauge.maxValue,\n           color: data.colorMap[data.colorMap.length  - 1]\n         });\n\n         var bgColor = config.bootData.user.lightTheme ? 'rgb(230,230,230)' : 'rgb(38,38,38)';\n         var fontScale = parseInt(panel.valueFontSize) / 100;\n         var dimension = Math.min(width, height);\n         var fontSize = Math.min(dimension/5, 100) * fontScale;\n         var gaugeWidth = Math.min(dimension/6, 60);\n         var thresholdMarkersWidth = gaugeWidth/5;\n\n         var options = {\n           series: {\n             gauges: {\n               gauge: {\n                 min: panel.gauge.minValue,\n                 max: panel.gauge.maxValue,\n                 background: { color: bgColor },\n                 border: { color: null },\n                 shadow: { show: false },\n                 width: gaugeWidth,\n                 height: height,\n               },\n               frame: { show: false },\n               label: { show: false },\n               layout: { margin: 0, thresholdWidth: 0 },\n               cell: { border: { width: 0 } },\n               threshold: {\n                 values: thresholds,\n                 label: {\n                   show: panel.gauge.thresholdLabels,\n                   margin: 8,\n                   font: { size: 18 }\n                 },\n                 show: panel.gauge.thresholdMarkers,\n                 width: thresholdMarkersWidth,\n               },\n               value: {\n                 color: panel.colorValue ? getColorForValue(data, data.valueRounded) : null,\n                 formatter: function() { return getValueText(); },\n                 font: { size: fontSize, family: '\"Helvetica Neue\", Helvetica, Arial, sans-serif' }\n               },\n               show: true\n             }\n           }\n         };\n\n         leftSideElem.append(plotCanvas);\n\n         var plotSeries = {\n           data: [[0, data.valueRounded]]\n         };\n         $.plot(plotCanvas, [plotSeries], options);\n       }\n\n     function addSparkline() {\n           var width = leftSideElem.width() + 20;\n           if (width < 30) {\n             // element has not gotten it's width yet\n             // delay sparkline render\n             setTimeout(addSparkline, 30);\n             return;\n           }\n           // delete the old sparkline if it exits\n           $(\".trendstat-panel-left-side-sparklines\").remove();\n           var height = ctrl.height;\n           var plotCanvas = $('<div class=\"trendstat-panel-left-side-sparklines\"></div>');\n           var plotCss = {};\n           plotCss.position = 'absolute';\n\n           if (panel.sparkline.full) {\n             plotCss.bottom = '5px';\n             plotCss.left = '-5px';\n             plotCss.width = (width - 10) + 'px';\n             var dynamicHeightMargin = height <= 100 ? 5 : (Math.round((height/100)) * 15) + 5;\n             plotCss.height = (height - dynamicHeightMargin) + 'px';\n           } else {\n             plotCss.bottom = \"0px\";\n             plotCss.left = \"-5px\";\n             plotCss.width = (width - 10) + 'px';\n             plotCss.height = Math.floor(height * 0.25) + \"px\";\n           }\n\n           plotCanvas.css(plotCss);\n\n           var options = {\n             legend: { show: false },\n             series: {\n               lines:  {\n                 show: true,\n                 fill: 1,\n                 lineWidth: 1,\n                 fillColor: panel.sparkline.fillColor,\n               },\n             },\n             yaxes: { show: false },\n             xaxis: {\n               show: false,\n               mode: \"time\",\n               min: ctrl.range.from.valueOf(),\n               max: ctrl.range.to.valueOf(),\n             },\n             grid: { hoverable: false, show: false },\n           };\n\n           leftSideElem.append(plotCanvas);\n\n           var plotSeries = {\n             data: data.flotpairs,\n             color: panel.sparkline.lineColor\n           };\n\n           $.plot(plotCanvas, [plotSeries], options);\n         }\n\n         this.events.on('render', function() {\n               render();\n               ctrl.renderingCompleted();\n             });\n  }\n}\n\nfunction getColorForValue(data, value) {\n  for (var i = data.thresholds.length; i > 0; i--) {\n    if (value >= data.thresholds[i - 1]) {\n      return data.colorMap[i];\n    }\n  }\n  return _.first(data.colorMap);\n}\n\nTrendStatPanelCtrl.templateUrl = 'partials/template.html';\n"]}