{"version":3,"sources":["../src/ctrl.js"],"names":["getColorForValue","data","value","i","thresholds","length","colorMap","_","first","MetricsPanelCtrl","$","kbn","config","TimeSeries","ICONS_TREND_UP","ICONS_TREND_DOWN","ICONS_TREND_NONE","panelDefaults","unitFormats","getUnitFormats","trendstat","colors","colorBackground","colorIcon","colorValue","leftSideSubtext","leftSideShowSubtext","leftSideSubtextFontSize","leftSideSubtextFontType","leftSideShowTimestamp","rightSideShowSubtext","rightSideSubTextFontSize","rightSideShowTimestamp","rightSideValueFontType","rightSideValueFontSize","rightSidePrefix","rightSidePrefixFontSize","rightSidePostfix","rightSidePostfixFontSize","rightSideDecimals","trendMethod","splitDisplay","showDivider","dividerColor","splitLeftPercent","splitRightPercent","trendIcon","trendIconUp","trendIconDown","trendIconNone","trendIconFontSize","trendIconColor","trendUpFontSize","trendDownFontSize","trendNoneFontSize","trendUpFillColor","trendDownFillColor","trendNoneFillColor","links","datasource","maxDataPoints","interval","targets","cacheTimeout","format","valueFontSize","valueFontType","valueFooterFontSize","valueFooterFontType","prefix","prefixFontSize","postfix","postfixFontSize","nullText","decimals","valueMaps","op","text","mappingTypes","name","rangeMaps","from","to","mappingType","nullPointMode","valueName","sparkline","show","full","lineColor","fillColor","gauge","minValue","maxValue","thresholdMarkers","thresholdLabels","TrendStatPanelCtrl","$scope","$injector","$http","$location","defaults","panel","http","valueNameOptions","currentValueFormatted","fontSizesPx","fontSizesPct","fontTypes","trendMethods","trendStatIconsUp","trendStatIconsDown","trendStatIconsNone","events","on","onDataReceived","bind","onDataError","onInitEditMode","panels","grafanaBootData","settings","thisPanel","pluginId","thisPanelPath","baseUrl","optionsPath","addEditorTab","trendOptionsPath","mappingsPath","map","index","indexOf","splice","render","push","rangeMap","isNumber","scaledDecimals","delta","dec","Math","floor","log","LN10","magn","pow","norm","size","result","max","flotpairs","series","error","Error","message","JSON","stringify","lastPoint","last","datapoints","lastValue","isArray","valueRounded","valueFormated","alias","isString","escape","stats","current","decimalInfo","getDecimalsForValue","formatFunc","valueFormats","roundValue","previousIndex","previousValue","prevDecimalInfo","prevFormatFunc","previousValueFormatted","previousValueRounded","trendPercentage","xstats","trendAvgValue","avg","trendAvgValueFormatted","trendAvgPercentage","trendTimeStep","timeStep","getTrendIcon","getTrendIconFontSize","getTrendIconColor","scopedVars","extend","__name","label","parseFloat","valueFormatted","subItem","err","d","Date","toISOString","dataList","leftSideTimestamp","getCurrentTime","rightSideTimestamp","seriesHandler","setValues","seriesData","target","getFlotPairs","options","background","tmp","panelColorIndex","color","newColor","historicalValue","currentValue","icon","fontSize","isNaN","pct","refresh","prevSplitRightPercent","prevSplitLeftPercent","epoch","setUTCSeconds","scope","elem","attrs","ctrl","linkSrv","$timeout","templateSrv","linkInfo","$panelContainer","find","leftSideElem","setElementHeight","css","height","split","strVale","Number","trim","currentValueRaw","currentValueRounded","previousValueRaw","currentValueBackgroundColor","valueColor","remove","addSparkline","addGauge","applyColoringThresholds","valueString","getSpan","className","replace","getBigValueHtml","body","getValueText","width","invalidGaugeRange","plotCanvas","plotCss","top","margin","position","bgColor","bootData","user","lightTheme","fontScale","parseInt","dimension","min","gaugeWidth","thresholdMarkersWidth","gauges","border","shadow","frame","layout","thresholdWidth","cell","threshold","values","font","formatter","family","append","plotSeries","plot","setTimeout","bottom","left","dynamicHeightMargin","round","legend","lines","fill","lineWidth","yaxes","xaxis","mode","range","valueOf","grid","hoverable","renderingCompleted","templateUrl"],"mappings":"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","file":"ctrl.js","sourcesContent":["import {\n  MetricsPanelCtrl\n} from 'app/plugins/sdk';\nimport _ from 'lodash';\nimport $ from 'jquery';\nimport kbn from 'app/core/utils/kbn';\nimport config from 'app/core/config';\nimport TimeSeries from 'app/core/time_series2';\n\nimport './libs/angular-aria/angular-aria.min.js';\nimport './libs/angular-animate/angular-animate.min.js';\nimport './libs/angular-material/angular-material.min.js';\nimport './libs/angular-material/angular-material.min.css!';\nimport './css/font-awesome.min.css!';\nimport './css/panel.css!';\nimport { ICONS_TREND_UP, ICONS_TREND_DOWN, ICONS_TREND_NONE } from './icons';\n\nconst panelDefaults = {\n  unitFormats: kbn.getUnitFormats(),\n  trendstat:  {\n    colors: [\"rgba(245, 54, 54, 0.9)\", \"rgba(237, 129, 40, 0.89)\", \"rgba(50, 172, 45, 0.97)\"],\n    colorBackground: false,\n    colorIcon: false,\n    colorValue: false,\n    leftSideSubtext: 'Updated:',\n    leftSideShowSubtext: true,\n    leftSideSubtextFontSize: '100%',\n    leftSideSubtextFontType: 'default',\n    leftSideShowTimestamp: true,\n    rightSideShowSubtext: true,\n    rightSideSubTextFontSize: '100%',\n    rightSideShowTimestamp: true,\n    rightSideValueFontType: '',\n    rightSideValueFontSize: '120%',\n    rightSidePrefix: '',\n    rightSidePrefixFontSize: '120%',\n    rightSidePostfix: '',\n    rightSidePostfixFontSize: '120%',\n    rightSideDecimals: 2,\n    trendMethod: 'AVG',\n    thresholds: '',\n    splitDisplay: true,\n    showDivider: true,\n    dividerColor: 'rgb(109, 109, 109)',\n    splitLeftPercent: 60,\n    splitRightPercent: 40,\n    trendIcon: 'fa-fw',\n    trendIconUp: 'fa-arrow-circle-up',\n    trendIconDown: 'fa-arrow-circle-down',\n    trendIconNone: 'fa-fw',\n    trendIconFontSize: '160%',\n    trendIconColor: 'rgb(255,255,255)',\n    trendUpFontSize: '160%',\n    trendDownFontSize: '160%',\n    trendNoneFontSize: '160%',\n    trendUpFillColor: 'rgba(245, 54, 54, 0.9)',\n    trendDownFillColor: 'rgba(50, 172, 45, 0.97)',\n    trendNoneFillColor: 'rgb(0,0,0)'\n  },\n  links: [],\n  datasource: null,\n  maxDataPoints: 100,\n  interval: null,\n  targets: [{}],\n  cacheTimeout: null,\n  format: 'none',\n  valueFontSize: '70%',\n  valueFontType: 'default',\n  valueFooterFontSize: 12,\n  valueFooterFontType: 'default',\n  prefix: '',\n  prefixFontSize: '60%',\n  postfix: '',\n  postfixFontSize: '60%',\n  nullText: null,\n  decimals: 2, // decimal precision\n  valueMaps: [\n    {\n      value: 'null',\n      op: '=',\n      text: 'N/A'\n    }\n   ],\n  mappingTypes: [\n    {\n      name: 'value to text',\n      value: 1\n    },\n    {\n      name: 'range to text',\n      value: 2\n    },\n   ],\n  rangeMaps: [\n    {\n      from: 'null',\n      to: 'null',\n      text: 'N/A'\n    }\n   ],\n  mappingType: 1,\n  nullPointMode: 'connected',\n  valueName: 'avg',\n  thresholds: '',\n  colorBackground: false,\n  colorValue: false,\n  colors: [\"rgba(245, 54, 54, 0.9)\", \"rgba(237, 129, 40, 0.89)\", \"rgba(50, 172, 45, 0.97)\"],\n  sparkline: {\n    show: false,\n    full: false,\n    lineColor: 'rgb(31, 120, 193)',\n    fillColor: 'rgba(31, 118, 189, 0.18)',\n  },\n  gauge: {\n    show: false,\n    minValue: 0,\n    maxValue: 100,\n    thresholdMarkers: true,\n    thresholdLabels: false\n  }\n};\n\nexport class TrendStatPanelCtrl extends MetricsPanelCtrl {\n\n  constructor($scope, $injector, $http, $location) {\n    super($scope, $injector);\n    _.defaults(this.panel, panelDefaults);\n    this.http = $http;\n    this.valueNameOptions = ['min', 'max', 'avg', 'current', 'total', 'name', 'first', 'delta', 'range'];\n    this.panel.currentValueFormatted = \"\";\n    this.fontSizesPx = [\n      '4px', '5px', '6px', '7px', '8px', '9px', '10px',\n      '11px', '12px', '13px', '14px', '15px', '16px', '17px', '18px', '19px', '20px',\n      '22px', '24px', '26px', '28px', '30px', '32px', '34px', '36px', '38px', '40px',\n      '42px', '44px', '46px', '48px', '50px', '52px', '54px', '56px', '58px', '60px',\n      '62px', '64px', '66px', '68px', '70px'];\n    this.fontSizesPct = [\n      '5%', '10%', '20%', '30%', '40%', '50%', '60%', '70%', '80%', '90%', '100%',\n      '110%', '120%', '130%', '140%', '150%', '160%', '170%', '180%', '190%', '200%',\n      '210%', '220%', '230%', '240%', '250%', '260%', '270%', '280%', '290%', '300%',\n      '310%', '320%', '330%', '340%', '350%', '360%', '370%', '380%', '390%', '400%',\n      '410%', '420%', '430%', '440%', '450%', '460%', '470%', '480%', '490%', '500%'\n    ];\n    this.fontTypes = [\n      'default', 'Arial', 'Avant Garde', 'Bookman',\n      'Consolas', 'Courier', 'Courier New',\n      'Garamond', 'Helvetica', 'Helvetica Neue', 'Open Sans',\n      'Palatino', 'sans-serif', 'Times', 'Times New Roman',\n      'Verdana'\n    ];\n    /*\n    this.panel.trendstat.rightSideValueFontType = this.fontTypes[7];\n    this.panel.valueFontSize = this.fontSizesPct[7];\n    this.panel.prefixFontSize = this.fontSizesPct[5];\n    this.panel.postfixFontSize = this.fontSizesPct[5];\n    this.panel.trendstat.leftSideSubtextFontSize = this.fontSizesPct[5];\n    this.panel.trendstat.rightSideSubtextFontSize = this.fontSizesPct[5];\n    this.panel.trendstat.rightSidePrefixFontSize = this.fontSizesPct[5];\n    this.panel.trendstat.rightSidePostfixFontSize = this.fontSizesPct[5];\n    this.panel.trendstat.rightSideValueFontSize = this.fontSizesPct[9];\n    */\n    this.trendMethods = [\n      'AVG',\n    ];\n    this.panel.trendstat.trendMethod = this.trendMethods[0];\n    this.trendStatIconsUp = ICONS_TREND_UP;\n    this.trendStatIconsDown = ICONS_TREND_DOWN;\n    this.trendStatIconsNone = ICONS_TREND_NONE;\n    this.events.on('data-received', this.onDataReceived.bind(this));\n    this.events.on('data-error', this.onDataError.bind(this));\n    this.events.on('data-snapshot-load', this.onDataReceived.bind(this));\n    this.events.on('init-edit-mode', this.onInitEditMode.bind(this));\n  }\n\n  // setup the editor\n  onInitEditMode() {\n    // determine the path to this plugin\n    var panels = grafanaBootData.settings.panels;\n    var thisPanel = panels[this.pluginId];\n    var thisPanelPath = thisPanel.baseUrl + '/';\n    // add the relative path to the partial\n    var optionsPath = thisPanelPath + 'partials/editor.options.html';\n    this.addEditorTab('Options', optionsPath, 2);\n    var trendOptionsPath = thisPanelPath + 'partials/editor.trendoptions.html';\n    this.addEditorTab('Trend Options', trendOptionsPath, 3);\n    var mappingsPath = thisPanelPath + 'partials/editor.mappings.html';\n    this.addEditorTab('Value Mappings', mappingsPath, 4);\n    this.unitFormats = kbn.getUnitFormats();\n  }\n\n  removeValueMap(map) {\n    var index = _.indexOf(this.panel.valueMaps, map);\n    this.panel.valueMaps.splice(index, 1);\n    this.render();\n  }\n\n  addValueMap() {\n    this.panel.valueMaps.push({\n      value: '',\n      op: '=',\n      text: ''\n    });\n  }\n\n  removeRangeMap(rangeMap) {\n    var index = _.indexOf(this.panel.rangeMaps, rangeMap);\n    this.panel.rangeMaps.splice(index, 1);\n    this.render();\n  }\n\n  addRangeMap() {\n    this.panel.rangeMaps.push({\n      from: '',\n      to: '',\n      text: ''\n    });\n  }\n\n  getDecimalsForValue(value) {\n    if (_.isNumber(this.panel.decimals)) {\n      return {\n        decimals: this.panel.decimals,\n        scaledDecimals: null\n      };\n    }\n\n    var delta = value / 2;\n    var dec = -Math.floor(Math.log(delta) / Math.LN10);\n\n    var magn = Math.pow(10, -dec),\n      norm = delta / magn, // norm is between 1.0 and 10.0\n      size;\n\n    if (norm < 1.5) {\n      size = 1;\n    } else if (norm < 3) {\n      size = 2;\n      // special case for 2.5, requires an extra decimal\n      if (norm > 2.25) {\n        size = 2.5;\n        ++dec;\n      }\n    } else if (norm < 7.5) {\n      size = 5;\n    } else {\n      size = 10;\n    }\n\n    size *= magn;\n\n    // reduce starting decimals if not needed\n    if (Math.floor(value) === value) {\n      dec = 0;\n    }\n\n    var result = {};\n    result.decimals = Math.max(0, dec);\n    result.scaledDecimals = result.decimals - Math.floor(Math.log(size) / Math.LN10) + 2;\n    return result;\n  }\n\n  setValues(data) {\n      data.flotpairs = [];\n\n      if (this.series.length > 1) {\n        var error = new Error();\n        error.message = 'Multiple Series Error';\n        error.data = 'Metric query returns ' + this.series.length +\n          ' series. TrendStat Panel expects a single series.\\n\\nResponse:\\n'+JSON.stringify(this.series);\n        throw error;\n      }\n      if (this.series && this.series.length > 0) {\n        var lastPoint = _.last(this.series[0].datapoints);\n        var lastValue = _.isArray(lastPoint) ? lastPoint[0] : null;\n\n        if (this.panel.valueName === 'name') {\n          data.value = 0;\n          data.valueRounded = 0;\n          data.valueFormated = this.series[0].alias;\n        } else if (_.isString(lastValue)) {\n          data.value = 0;\n          data.valueFormated = _.escape(lastValue);\n          data.valueRounded = 0;\n        } else {\n          // TODO: avg etc\n          //data.value = this.series[0].stats[this.panel.valueName];\n          data.value = this.series[0].stats.current;\n          data.flotpairs = this.series[0].flotpairs;\n\n          var decimalInfo = this.getDecimalsForValue(data.value);\n          var formatFunc = kbn.valueFormats[this.panel.format];\n          data.valueFormated = formatFunc(data.value, decimalInfo.decimals, decimalInfo.scaledDecimals);\n          data.valueRounded = kbn.roundValue(data.value, decimalInfo.decimals);\n        }\n        //data.trendAvgValue = ctrl.series[0].stats.avg;\n        var previousIndex = this.series[0].datapoints.length - 2;\n        data.previousValue = this.series[0].datapoints[previousIndex][0];\n        var prevDecimalInfo = this.getDecimalsForValue(data.previousValue);\n        var prevFormatFunc = kbn.valueFormats[this.panel.format];\n        data.previousValueFormatted = prevFormatFunc(data.previousValue, prevDecimalInfo.decimals, prevDecimalInfo.scaledDecimals);\n        data.previousValueRounded = kbn.roundValue(data.previousValue, prevDecimalInfo.decimals);\n\n        // calculate change by percentile\n        data.trendPercentage = ((data.value - data.previousValue) / data.previousValue) * 100;\n        data.trendPercentage = kbn.roundValue(data.trendPercentage, prevDecimalInfo.decimals);\n        //debugger;\n        var xstats = this.series[0].stats;\n        data.trendAvgValue = this.series[0].stats.avg;\n        data.trendAvgValueFormatted = prevFormatFunc(data.trendAvgValue, prevDecimalInfo.decimals, prevDecimalInfo.scaledDecimals);\n\n        data.trendAvgPercentage = ((data.value - data.trendAvgValue) / data.trendAvgValue) * 100;\n        data.trendAvgPercentage = kbn.roundValue(data.trendAvgPercentage, prevDecimalInfo.decimals);\n        data.trendTimeStep = this.series[0].stats.timeStep;\n\n        // for previous value trend\n        //data.trendIcon = this.getTrendIcon(data.previousValue, data.value);\n        // for avg value trend\n        data.trendIcon = this.getTrendIcon(data.trendAvgValue, data.value);\n        data.trendIconFontSize = this.getTrendIconFontSize(data.trendAvgValue, data.value);\n        data.trendIconColor = this.getTrendIconColor(data.trendAvgValue, data.value);\n\n        // Add $__name variable for using in prefix or postfix\n        data.scopedVars = _.extend({}, this.panel.scopedVars);\n        data.scopedVars.__name = {value: this.series[0].label};\n      }\n\n      // check value to text mappings if its enabled\n      if (this.panel.mappingType === 1) {\n        for (var i = 0; i < this.panel.valueMaps.length; i++) {\n          var map = this.panel.valueMaps[i];\n          // special null case\n          if (map.value === 'null') {\n            if (data.value === null || data.value === void 0) {\n              data.valueFormated = map.text;\n              return;\n            }\n            continue;\n          }\n\n          // value/number to text mapping\n          var value = parseFloat(map.value);\n          if (value === data.valueRounded) {\n            data.valueFormated = map.text;\n            return;\n          }\n        }\n      } else if (this.panel.mappingType === 2) {\n        for (let i = 0; i < this.panel.rangeMaps.length; i++) {\n          let map = this.panel.rangeMaps[i];\n          // special null case\n          if (map.from === 'null' && map.to === 'null') {\n            if (data.value === null || data.value === void 0) {\n              data.valueFormated = map.text;\n              return;\n            }\n            continue;\n          }\n\n          // value/number to range mapping\n          var from = parseFloat(map.from);\n          var to = parseFloat(map.to);\n          if (to >= data.valueRounded && from <= data.valueRounded) {\n            data.valueFormated = map.text;\n            return;\n          }\n        }\n      }\n\n      if (data.value === null || data.value === void 0) {\n        data.valueFormated = \"no value\";\n      }\n    }\n\n  getValueText() {\n    return this.data.valueFormatted;\n  }\n\n  setUnitFormat(subItem) {\n    this.panel.format = subItem.value;\n    this.render();\n  }\n\n  onDataError(err) {\n    this.onDataReceived([]);\n  }\n\n  getCurrentTime() {\n    var d = new Date();\n    return d.toISOString();\n  }\n\n  onDataReceived(dataList) {\n    // these can differ given the options, but for now set them to the same time\n    //\n    this.panel.trendstat.leftSideTimestamp = this.getCurrentTime();\n    this.panel.trendstat.rightSideTimestamp = this.panel.trendstat.leftSideTimestamp;\n\n    this.series = dataList.map(this.seriesHandler.bind(this));\n    var data = {};\n    this.setValues(data);\n    this.data = data;\n    //console.log(\"Data value: \" + data.value + \" formatted: \" + data.valueFormatted + \" rounded: \" + data.valueRounded);\n    // var fmtTxt = kbn.valueFormats[this.panel.format];\n    // console.log(\"Format: \" + fmtTxt);\n    //this.gaugeObject.updateGauge(data.value, data.valueFormatted, data.valueRounded);\n    this.render();\n  }\n\n  seriesHandler(seriesData) {\n    var series = new TimeSeries({\n      datapoints: seriesData.datapoints,\n      alias: seriesData.target,\n    });\n    series.flotpairs = series.getFlotPairs(this.panel.nullPointMode);\n    return series;\n  }\n\n  setColoring(options) {\n    if (options.background) {\n      this.panel.colorValue = false;\n      this.panel.colors = ['rgba(71, 212, 59, 0.4)', 'rgba(245, 150, 40, 0.73)', 'rgba(225, 40, 40, 0.59)'];\n    } else {\n      this.panel.colorBackground = false;\n      this.panel.colors = ['rgba(50, 172, 45, 0.97)', 'rgba(237, 129, 40, 0.89)', 'rgba(245, 54, 54, 0.9)'];\n    }\n    this.render();\n  }\n\n  invertColorOrder() {\n    var tmp = this.panel.colors[0];\n    this.panel.colors[0] = this.panel.colors[2];\n    this.panel.colors[2] = tmp;\n    this.render();\n  }\n\n  onColorChange(panelColorIndex) {\n    return (color) => {\n      this.panel.colors[panelColorIndex] = color;\n      this.render();\n    };\n  }\n\n  onSparklineColorChange(newColor) {\n    this.panel.sparkline.lineColor = newColor;\n    this.render();\n  }\n\n  onSparklineFillChange(newColor) {\n    this.panel.sparkline.fillColor = newColor;\n    this.render();\n  }\n\n  invertTrendColorOrder() {\n    var tmp = this.panel.trendstat.colors[0];\n    this.panel.trendstat.colors[0] = this.panel.trendstat.colors[2];\n    this.panel.trendstat.colors[2] = tmp;\n    this.render();\n  }\n\n  getTrendIcon(historicalValue, currentValue) {\n    var icon = \"fa fa-square\";\n    if (currentValue > historicalValue) {\n      icon = \"fa \" + this.panel.trendstat.trendIconUp;\n    }\n    if (currentValue < historicalValue) {\n      icon = \"fa \" + this.panel.trendstat.trendIconDown;\n    }\n    if (currentValue === historicalValue) {\n      icon = \"fa \" + this.panel.trendstat.trendIconNone;\n    }\n    return icon;\n  }\n  getTrendIconFontSize(historicalValue, currentValue) {\n    var fontSize = this.panel.trendstat.trendNoneFontSize;\n    if (currentValue > historicalValue) {\n      fontSize = this.panel.trendstat.trendUpFontSize;\n    }\n    if (currentValue < historicalValue) {\n      fontSize = this.panel.trendstat.trendDownFontSize;\n    }\n    if (currentValue === historicalValue) {\n      fontSize = this.panel.trendstat.trendNoneFontSize;\n    }\n    return fontSize;\n  }\n  getTrendIconColor(historicalValue, currentValue) {\n    var color = \"rgb(255,255,255)\";\n    if (currentValue > historicalValue) {\n      color = this.panel.trendstat.trendUpFillColor;\n    }\n    if (currentValue < historicalValue) {\n      color = this.panel.trendstat.trendDownFillColor;\n    }\n    if (currentValue === historicalValue) {\n      color = this.panel.trendstat.trendNoneFillColor;\n    }\n    return color;\n  }\n\n  updateLeftSplitPercentage() {\n    // make sure it is a number\n    if (isNaN(this.panel.trendstat.splitLeftPercent)) {\n      // autoset to 60\n      this.panel.trendstat.splitLeftPercent = 60;\n    }\n    var pct = this.panel.trendstat.splitLeftPercent;\n    // make sure the value is in range\n    if ((pct < 0 ) || (pct > 100)) {\n      this.panel.trendstat.splitLeftPercent = 60;\n    }\n    // update value\n    pct = this.panel.trendstat.splitLeftPercent;\n    // set the right side\n    this.panel.trendstat.splitRightPercent = 100 - pct;\n    // now refresh (render will not take effect)\n    this.refresh();\n  }\n\n  updateRightSplitPercentage() {\n    // make sure it is a number\n    if (isNaN(this.panel.trendstat.splitRightPercent)) {\n      // autoset to 40\n      this.panel.trendstat.splitRightPercent = 40;\n    }\n    var pct = this.panel.trendstat.splitRightPercent;\n    // make sure the value is in range\n    if ((pct < 0 ) || (pct > 100)) {\n      this.panel.trendstat.splitRightPercent = 40;\n    }\n    // update value\n    pct = this.panel.trendstat.splitRightPercent;\n    // set the right side\n    this.panel.trendstat.splitLeftPercent = 100 - pct;\n    // now refresh (render will not take effect)\n    this.refresh();\n  }\n\n  toggleSplitDisplay() {\n    if (!this.panel.trendstat.splitDisplay) {\n      this.panel.trendstat.prevSplitRightPercent = this.panel.trendstat.splitRightPercent;\n      this.panel.trendstat.prevSplitLeftPercent = this.panel.trendstat.splitLeftPercent;\n      this.panel.trendstat.splitRightPercent = 0;\n      this.panel.trendstat.splitLeftPercent = 100;\n    } else {\n      this.panel.trendstat.splitRightPercent = this.panel.trendstat.prevSplitRightPercent;\n      this.panel.trendstat.splitLeftPercent = this.panel.trendstat.prevSplitLeftPercent;\n    }\n    this.refresh();\n  }\n  getStatusColor(value) {\n    var color = \"yellow\";\n    switch (value) {\n      case 0:\n        color = \"green\";\n        break;\n      case 1:\n        color = \"yellow\";\n        break;\n      case 2:\n        color = \"red\";\n        break;\n      default:\n        color = \"yellow\";\n        break;\n    }\n    return color;\n  }\n\n  convertTime(epoch) {\n    var d = new Date(0);\n    d.setUTCSeconds(epoch);\n    return d.toISOString();\n  }\n\n\n  link(scope, elem, attrs, ctrl) {\n    var $location = this.$location;\n    var linkSrv = this.linkSrv;\n    var $timeout = this.$timeout;\n    var panel = ctrl.panel;\n    var templateSrv = this.templateSrv;\n    var data, linkInfo;\n    var $panelContainer = elem.find('.panel-container');\n    elem = elem.find('.trendstat-panel');\n    var leftSideElem = elem.find('.trendstat-panel-left-side');\n    function setElementHeight() {\n      elem.css('height', ctrl.height + 'px');\n    }\n\n    function render() {\n      if (!ctrl.data) {\n        return;\n      }\n\n      data = ctrl.data;\n      // get thresholds\n      data.thresholds = panel.thresholds.split(',').map(function(strVale) {\n        return Number(strVale.trim());\n      });\n      data.colorMap = panel.colors;\n      //debugger;\n\n      setElementHeight();\n      //var body = panel.gauge.show ? '' : getBigValueHtml();\n      panel.currentValueRaw = data.value;\n      panel.currentValueRounded = data.valueRounded;\n      panel.currentValueFormatted = data.valueFormated;\n      panel.previousValueRaw = data.previousValue;\n      panel.previousValueFormatted = data.previousValueFormatted;\n      panel.previousValueRounded = data.previousValueRounded;\n      panel.trendstat.trendIcon = data.trendIcon;\n      panel.trendstat.trendIconFontSize = data.trendIconFontSize;\n      panel.trendstat.trendIconColor = data.trendIconColor;\n      panel.trendPercentage = data.trendPercentage;\n      panel.trendAvgPercentage = data.trendAvgPercentage;\n      panel.trendAvgValue = data.trendAvgValue;\n      panel.trendAvgValueFormatted = data.trendAvgValueFormatted;\n\n      panel.trendTimeStep = data.trendTimeStep;\n\n      //var meh1 = ctrl.series[0].stats.avg;\n      //var meh2 = ctrl.series[0].stats.current;\n      //debugger;\n\n      if (panel.colorBackground && !isNaN(data.valueRounded)) {\n        let color = getColorForValue(data, data.valueRounded);\n        if (color) {\n          panel.currentValueBackgroundColor = color;\n        }\n      } else {\n        panel.currentValueBackgroundColor = '';\n      }\n\n      if (panel.colorValue && !isNaN(data.valueRounded)) {\n        let color = getColorForValue(data, data.valueRounded);\n        if (color) {\n          panel.valueColor = color;\n        }\n      } else {\n        panel.valueColor = '';\n      }\n\n      $(\".trendstat-panel-left-side-sparklines\").remove();\n      if (panel.sparkline.show) {\n        addSparkline();\n      }\n\n      $(\".trendstat-panel-left-side-gauge\").remove();\n      if (panel.gauge.show) {\n        addGauge();\n      }\n\n      //elem.toggleClass('pointer', panel.links.length > 0);\n\n      //if (panel.links.length > 0) {\n      //  linkInfo = linkSrv.getPanelLinkAnchorInfo(panel.links[0], data.scopedVars);\n      //} else {\n      //  linkInfo = null;\n      //}\n    } // end render()\n\n    function getCurrentTime() {\n      var d = new Date();\n      return d.toISOString();\n    }\n    function applyColoringThresholds(value, valueString) {\n      if (!panel.colorValue) {\n        return valueString;\n      }\n\n      var color = getColorForValue(data, value);\n      if (color) {\n        return '<span style=\"color:' + color + '\">'+ valueString + '</span>';\n      }\n\n      return valueString;\n    }\n\n    function getSpan(className, fontSize, value)  {\n      value = templateSrv.replace(value, data.scopedVars);\n      return '<span class=\"' + className + '\" style=\"font-size:' + fontSize + '\">' +\n        value + '</span>';\n    }\n\n\n    function getBigValueHtml() {\n       var body = '<div class=\"singlestat-panel-value-container\">';\n\n       if (panel.prefix) { body += getSpan('singlestat-panel-prefix', panel.prefixFontSize, panel.prefix); }\n\n       var value = applyColoringThresholds(data.value, data.valueFormated);\n       body += getSpan('singlestat-panel-value', panel.valueFontSize, value);\n\n       if (panel.postfix) { body += getSpan('singlestat-panel-postfix', panel.postfixFontSize, panel.postfix); }\n\n       body += '</div>';\n\n       return body;\n     }\n\n     function getValueText() {\n       var result = panel.prefix ? panel.prefix : '';\n       result += data.valueFormated;\n       result += panel.postfix ? panel.postfix : '';\n\n       return result;\n     }\n\n     function addGauge() {\n         var width = leftSideElem.width();\n         var height = leftSideElem.height();\n\n         ctrl.invalidGaugeRange = false;\n         if (panel.gauge.minValue > panel.gauge.maxValue) {\n           ctrl.invalidGaugeRange = true;\n           return;\n         }\n         // delete the old gauge if it exits\n         $(\".trendstat-panel-left-side-gauge\").remove();\n\n         var plotCanvas = $('<div class=\"trendstat-panel-left-side-gauge\"></div>');\n\n         var plotCss = {\n           top: '10px',\n           margin: 'auto',\n           position: 'absolute',\n           height: (height * 0.9) + 'px',\n           width:  width + 'px'\n         };\n\n         plotCanvas.css(plotCss);\n\n         var thresholds = [];\n         for (var i = 0; i < data.thresholds.length; i++) {\n           thresholds.push({\n             value: data.thresholds[i],\n             color: data.colorMap[i]\n           });\n         }\n         thresholds.push({\n           value: panel.gauge.maxValue,\n           color: data.colorMap[data.colorMap.length  - 1]\n         });\n\n         var bgColor = config.bootData.user.lightTheme ? 'rgb(230,230,230)' : 'rgb(38,38,38)';\n         var fontScale = parseInt(panel.valueFontSize) / 100;\n         var dimension = Math.min(width, height);\n         var fontSize = Math.min(dimension/5, 100) * fontScale;\n         var gaugeWidth = Math.min(dimension/6, 60);\n         var thresholdMarkersWidth = gaugeWidth/5;\n\n         var options = {\n           series: {\n             gauges: {\n               gauge: {\n                 min: panel.gauge.minValue,\n                 max: panel.gauge.maxValue,\n                 background: { color: bgColor },\n                 border: { color: null },\n                 shadow: { show: false },\n                 width: gaugeWidth,\n                 height: height,\n               },\n               frame: { show: false },\n               label: { show: false },\n               layout: { margin: 0, thresholdWidth: 0 },\n               cell: { border: { width: 0 } },\n               threshold: {\n                 values: thresholds,\n                 label: {\n                   show: panel.gauge.thresholdLabels,\n                   margin: 8,\n                   font: { size: 18 }\n                 },\n                 show: panel.gauge.thresholdMarkers,\n                 width: thresholdMarkersWidth,\n               },\n               value: {\n                 color: panel.colorValue ? getColorForValue(data, data.valueRounded) : null,\n                 formatter: function() { return getValueText(); },\n                 font: { size: fontSize, family: panel.valueFontType }\n               },\n               show: true\n             }\n           }\n         };\n\n         leftSideElem.append(plotCanvas);\n\n         var plotSeries = {\n           data: [[0, data.valueRounded]]\n         };\n         $.plot(plotCanvas, [plotSeries], options);\n       }\n\n     function addSparkline() {\n           var width = leftSideElem.width() + 20;\n           if (width < 30) {\n             // element has not gotten it's width yet\n             // delay sparkline render\n             setTimeout(addSparkline, 30);\n             return;\n           }\n           // delete the old sparkline if it exits\n           $(\".trendstat-panel-left-side-sparklines\").remove();\n           var height = ctrl.height;\n           var plotCanvas = $('<div class=\"trendstat-panel-left-side-sparklines\"></div>');\n           var plotCss = {};\n           plotCss.position = 'absolute';\n\n           if (panel.sparkline.full) {\n             plotCss.bottom = '5px';\n             plotCss.left = '-5px';\n             plotCss.width = (width - 10) + 'px';\n             var dynamicHeightMargin = height <= 100 ? 5 : (Math.round((height/100)) * 15) + 5;\n             plotCss.height = (height - dynamicHeightMargin) + 'px';\n           } else {\n             plotCss.bottom = \"0px\";\n             plotCss.left = \"-5px\";\n             plotCss.width = (width - 10) + 'px';\n             plotCss.height = Math.floor(height * 0.25) + \"px\";\n           }\n\n           plotCanvas.css(plotCss);\n\n           var options = {\n             legend: { show: false },\n             series: {\n               lines:  {\n                 show: true,\n                 fill: 1,\n                 lineWidth: 1,\n                 fillColor: panel.sparkline.fillColor,\n               },\n             },\n             yaxes: { show: false },\n             xaxis: {\n               show: false,\n               mode: \"time\",\n               min: ctrl.range.from.valueOf(),\n               max: ctrl.range.to.valueOf(),\n             },\n             grid: { hoverable: false, show: false },\n           };\n\n           leftSideElem.append(plotCanvas);\n\n           var plotSeries = {\n             data: data.flotpairs,\n             color: panel.sparkline.lineColor\n           };\n\n           $.plot(plotCanvas, [plotSeries], options);\n         }\n\n         this.events.on('render', function() {\n               render();\n               ctrl.renderingCompleted();\n             });\n  }\n}\n\nfunction getColorForValue(data, value) {\n  for (var i = data.thresholds.length; i > 0; i--) {\n    if (value >= data.thresholds[i - 1]) {\n      return data.colorMap[i];\n    }\n  }\n  return _.first(data.colorMap);\n}\n\nTrendStatPanelCtrl.templateUrl = 'partials/template.html';\n"]}