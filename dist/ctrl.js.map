{"version":3,"sources":["../src/ctrl.js"],"names":["getColorForValue","data","value","i","thresholds","length","colorMap","_","first","MetricsPanelCtrl","$","kbn","config","TimeSeries","ICONS_TREND_UP","ICONS_TREND_DOWN","ICONS_TREND_NONE","panelDefaults","unitFormats","getUnitFormats","trendstat","colors","colorBackground","colorIcon","colorValue","leftSideSubtext","leftSideShowSubtext","leftSideSubtextFontSize","leftSideShowTimestamp","rightSideShowSubtext","rightSideSubTextFontSize","rightSideShowTimestamp","rightSideValueFontType","rightSideValueFontSize","rightSidePrefix","rightSidePrefixFontSize","rightSidePostfix","rightSidePostfixFontSize","rightSideDecimals","trendMethod","splitDisplay","showDivider","dividerColor","splitRatio","trendIconUp","trendIconDown","trendIconNone","trendUpFontSize","trendDownFontSize","trendNoneFontSize","trendUpFillColor","trendDownFillColor","trendNoneFillColor","links","datasource","maxDataPoints","interval","targets","cacheTimeout","format","valueFontSize","valueFontType","valueFooterFontSize","valueFooterFontType","prefix","prefixFontSize","postfix","postfixFontSize","nullText","decimals","valueMaps","op","text","mappingTypes","name","rangeMaps","from","to","mappingType","nullPointMode","valueName","NOTprefixFontSize","NOTvalueFontSize","NOTpostfixFontSize","sparkline","show","full","lineColor","fillColor","gauge","minValue","maxValue","thresholdMarkers","thresholdLabels","TrendStatPanelCtrl","$scope","$injector","$http","$location","defaults","panel","http","valueNameOptions","currentValueFormatted","fontSizesPx","fontSizesPct","fontTypes","rightSideSubtextFontSize","trendMethods","trendStatIconsUp","trendStatIconsDown","trendStatIconsNone","events","on","onDataReceived","bind","onDataError","onInitEditMode","panels","grafanaBootData","settings","thisPanel","pluginId","thisPanelPath","baseUrl","optionsPath","addEditorTab","trendOptionsPath","mappingsPath","map","index","indexOf","splice","render","push","rangeMap","isNumber","scaledDecimals","delta","dec","Math","floor","log","LN10","magn","pow","norm","size","result","max","flotpairs","series","error","Error","message","JSON","stringify","lastPoint","last","datapoints","lastValue","isArray","valueRounded","valueFormated","alias","isString","escape","stats","current","decimalInfo","getDecimalsForValue","formatFunc","valueFormats","roundValue","previousIndex","previousValue","prevDecimalInfo","prevFormatFunc","previousValueFormatted","previousValueRounded","trendPercentage","xstats","trendAvgValue","avg","trendAvgValueFormatted","trendAvgPercentage","trendTimeStep","timeStep","trendIcon","getTrendIcon","scopedVars","extend","__name","label","parseFloat","valueFormatted","subItem","err","dataList","seriesHandler","setValues","seriesData","target","getFlotPairs","options","background","tmp","historicalValue","currentValue","icon","color","epoch","d","Date","setUTCSeconds","toISOString","scope","elem","attrs","ctrl","linkSrv","$timeout","templateSrv","linkInfo","$panelContainer","find","leftSideElem","setElementHeight","css","height","split","strVale","Number","trim","currentValueRaw","currentValueRounded","previousValueRaw","isNaN","currentValueBackgroundColor","valueColor","remove","addSparkline","addGauge","leftSideTimestamp","getCurrentTime","applyColoringThresholds","valueString","getSpan","className","fontSize","replace","getBigValueHtml","body","getValueText","width","invalidGaugeRange","plotCanvas","plotCss","top","margin","position","bgColor","bootData","user","lightTheme","fontScale","parseInt","dimension","min","gaugeWidth","thresholdMarkersWidth","gauges","border","shadow","frame","layout","thresholdWidth","cell","threshold","values","font","formatter","family","append","plotSeries","plot","setTimeout","bottom","left","dynamicHeightMargin","round","legend","lines","fill","lineWidth","yaxes","xaxis","mode","range","valueOf","grid","hoverable","renderingCompleted","templateUrl"],"mappings":"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","file":"ctrl.js","sourcesContent":["import {\n  MetricsPanelCtrl\n} from 'app/plugins/sdk';\nimport _ from 'lodash';\nimport $ from 'jquery';\nimport kbn from 'app/core/utils/kbn';\nimport config from 'app/core/config';\nimport TimeSeries from 'app/core/time_series2';\nimport 'jquery.flot';\nimport 'jquery.flot.gauge';\n\nimport './libs/angular-aria/angular-aria.min.js';\nimport './libs/angular-animate/angular-animate.min.js';\nimport './libs/angular-material/angular-material.min.js';\nimport './libs/angular-material/angular-material.min.css!';\nimport './css/font-awesome.min.css!';\nimport './css/panel.css!';\nimport { ICONS_TREND_UP, ICONS_TREND_DOWN, ICONS_TREND_NONE } from './icons';\n\nconst panelDefaults = {\n  unitFormats: kbn.getUnitFormats(),\n  trendstat:  {\n    colors: [\"rgba(245, 54, 54, 0.9)\", \"rgba(237, 129, 40, 0.89)\", \"rgba(50, 172, 45, 0.97)\"],\n    colorBackground: false,\n    colorIcon: false,\n    colorValue: false,\n    leftSideSubtext: 'Updated:',\n    leftSideShowSubtext: true,\n    leftSideSubtextFontSize: '60%',\n    leftSideShowTimestamp: true,\n    rightSideShowSubtext: true,\n    rightSideSubTextFontSize: '60%',\n    rightSideShowTimestamp: true,\n    rightSideValueFontType: '',\n    rightSideValueFontSize: '80%',\n    rightSidePrefix: '',\n    rightSidePrefixFontSize: '60%',\n    rightSidePostfix: '',\n    rightSidePostfixFontSize: '60%',\n    rightSideDecimals: 2,\n    trendMethod: 'AVG',\n    thresholds: '',\n    splitDisplay: true,\n    showDivider: true,\n    dividerColor: 'rgb(109, 109, 109)',\n    splitRatio: 0.6,\n    trendIconUp: 'fa-arrow-circle-up',\n    trendIconDown: 'fa-arrow-circle-down',\n    trendIconNone: 'fa-fw',\n    trendUpFontSize: '160%',\n    trendDownFontSize: '160%',\n    trendNoneFontSize: '160%',\n    trendUpFillColor: 'rgba(245, 54, 54, 0.9)',\n    trendDownFillColor: 'rgba(50, 172, 45, 0.97)',\n    trendNoneFillColor: 'rgb(0,0,0)'\n  },\n  links: [],\n  datasource: null,\n  maxDataPoints: 100,\n  interval: null,\n  targets: [{}],\n  cacheTimeout: null,\n  format: 'none',\n  valueFontSize: '70%',\n  valueFontType: 'default',\n  valueFooterFontSize: 12,\n  valueFooterFontType: 'default',\n  prefix: '',\n  prefixFontSize: '60%',\n  postfix: '',\n  postfixFontSize: '60%',\n  nullText: null,\n  decimals: 2, // decimal precision\n  valueMaps: [\n    {\n      value: 'null',\n      op: '=',\n      text: 'N/A'\n    }\n   ],\n  mappingTypes: [\n    {\n      name: 'value to text',\n      value: 1\n    },\n    {\n      name: 'range to text',\n      value: 2\n    },\n   ],\n  rangeMaps: [\n    {\n      from: 'null',\n      to: 'null',\n      text: 'N/A'\n    }\n   ],\n  mappingType: 1,\n  nullPointMode: 'connected',\n  valueName: 'avg',\n  NOTprefixFontSize: '50%',\n  NOTvalueFontSize: '80%',\n  NOTpostfixFontSize: '50%',\n  thresholds: '',\n  colorBackground: false,\n  colorValue: false,\n  colors: [\"rgba(245, 54, 54, 0.9)\", \"rgba(237, 129, 40, 0.89)\", \"rgba(50, 172, 45, 0.97)\"],\n  sparkline: {\n    show: false,\n    full: false,\n    lineColor: 'rgb(31, 120, 193)',\n    fillColor: 'rgba(31, 118, 189, 0.18)',\n  },\n  gauge: {\n    show: false,\n    minValue: 0,\n    maxValue: 100,\n    thresholdMarkers: true,\n    thresholdLabels: false\n  }\n};\n\nexport class TrendStatPanelCtrl extends MetricsPanelCtrl {\n\n  constructor($scope, $injector, $http, $location) {\n    super($scope, $injector);\n    _.defaults(this.panel, panelDefaults);\n    this.http = $http;\n    this.valueNameOptions = ['min','max','avg', 'current', 'total', 'name', 'first', 'delta', 'range'];\n    this.panel.currentValueFormatted = \"\";\n    this.fontSizesPx = [\n      '4px', '5px', '6px', '7px', '8px', '9px', '10px',\n      '11px', '12px', '13px', '14px', '15px', '16px', '17px', '18px', '19px', '20px',\n      '22px', '24px', '26px', '28px', '30px', '32px', '34px', '36px', '38px', '40px',\n      '42px', '44px', '46px', '48px', '50px', '52px', '54px', '56px', '58px', '60px',\n      '62px', '64px', '66px', '68px', '70px'];\n    this.fontSizesPct = [\n      '10%', '20%', '30%', '40%', '50%', '60%', '70%', '80%', '90%', '100%',\n      '110%', '120', '130%', '140%', '150%', '160%', '170%', '180%', '190%', '200%'];\n    this.fontTypes = [\n      'Arial', 'Avant Garde', 'Bookman',\n      'Consolas', 'Courier', 'Courier New',\n      'Garamond', 'Helvetica', 'Helvetica Neue', 'Open Sans',\n      'Palatino', 'sans-serif', 'Times', 'Times New Roman',\n      'Verdana'\n    ];\n    this.panel.trendstat.rightSideValueFontType = this.fontTypes[7];\n    this.panel.valueFontSize = this.fontSizesPct[7];\n    this.panel.prefixFontSize = this.fontSizesPct[5];\n    this.panel.postfixFontSize = this.fontSizesPct[5];\n    this.panel.trendstat.leftSideSubtextFontSize = this.fontSizesPct[5];\n    this.panel.trendstat.rightSideSubtextFontSize = this.fontSizesPct[5];\n    this.panel.trendstat.rightSidePrefixFontSize = this.fontSizesPct[5];\n    this.panel.trendstat.rightSidePostfixFontSize = this.fontSizesPct[5];\n    this.panel.trendstat.rightSideValueFontSize = this.fontSizesPct[9];\n    this.trendMethods = [\n      'AVG',\n    ];\n    this.panel.trendstat.trendMethod = this.trendMethods[0];\n    this.trendStatIconsUp = ICONS_TREND_UP;\n    this.trendStatIconsDown = ICONS_TREND_DOWN;\n    this.trendStatIconsNone = ICONS_TREND_NONE;\n    this.events.on('data-received', this.onDataReceived.bind(this));\n    this.events.on('data-error', this.onDataError.bind(this));\n    this.events.on('data-snapshot-load', this.onDataReceived.bind(this));\n    this.events.on('init-edit-mode', this.onInitEditMode.bind(this));\n  }\n\n  // setup the editor\n  onInitEditMode() {\n    // determine the path to this plugin\n    var panels = grafanaBootData.settings.panels;\n    var thisPanel = panels[this.pluginId];\n    var thisPanelPath = thisPanel.baseUrl + '/';\n    // add the relative path to the partial\n    var optionsPath = thisPanelPath + 'partials/editor.options.html';\n    this.addEditorTab('Options', optionsPath, 2);\n    var trendOptionsPath = thisPanelPath + 'partials/editor.trendoptions.html';\n    this.addEditorTab('Trend Options', trendOptionsPath, 3);\n    var mappingsPath = thisPanelPath + 'partials/editor.mappings.html';\n    this.addEditorTab('Value Mappings', mappingsPath, 4);\n    this.unitFormats = kbn.getUnitFormats();\n  }\n\n  removeValueMap(map) {\n    var index = _.indexOf(this.panel.valueMaps, map);\n    this.panel.valueMaps.splice(index, 1);\n    this.render();\n  }\n\n  addValueMap() {\n    this.panel.valueMaps.push({\n      value: '',\n      op: '=',\n      text: ''\n    });\n  }\n\n  removeRangeMap(rangeMap) {\n    var index = _.indexOf(this.panel.rangeMaps, rangeMap);\n    this.panel.rangeMaps.splice(index, 1);\n    this.render();\n  }\n\n  addRangeMap() {\n    this.panel.rangeMaps.push({\n      from: '',\n      to: '',\n      text: ''\n    });\n  }\n\n  getDecimalsForValue(value) {\n    if (_.isNumber(this.panel.decimals)) {\n      return {\n        decimals: this.panel.decimals,\n        scaledDecimals: null\n      };\n    }\n\n    var delta = value / 2;\n    var dec = -Math.floor(Math.log(delta) / Math.LN10);\n\n    var magn = Math.pow(10, -dec),\n      norm = delta / magn, // norm is between 1.0 and 10.0\n      size;\n\n    if (norm < 1.5) {\n      size = 1;\n    } else if (norm < 3) {\n      size = 2;\n      // special case for 2.5, requires an extra decimal\n      if (norm > 2.25) {\n        size = 2.5;\n        ++dec;\n      }\n    } else if (norm < 7.5) {\n      size = 5;\n    } else {\n      size = 10;\n    }\n\n    size *= magn;\n\n    // reduce starting decimals if not needed\n    if (Math.floor(value) === value) {\n      dec = 0;\n    }\n\n    var result = {};\n    result.decimals = Math.max(0, dec);\n    result.scaledDecimals = result.decimals - Math.floor(Math.log(size) / Math.LN10) + 2;\n    return result;\n  }\n\n  setValues(data) {\n      data.flotpairs = [];\n\n      if (this.series.length > 1) {\n        var error = new Error();\n        error.message = 'Multiple Series Error';\n        error.data = 'Metric query returns ' + this.series.length +\n          ' series. TrendStat Panel expects a single series.\\n\\nResponse:\\n'+JSON.stringify(this.series);\n        throw error;\n      }\n      if (this.series && this.series.length > 0) {\n        var lastPoint = _.last(this.series[0].datapoints);\n        var lastValue = _.isArray(lastPoint) ? lastPoint[0] : null;\n\n        if (this.panel.valueName === 'name') {\n          data.value = 0;\n          data.valueRounded = 0;\n          data.valueFormated = this.series[0].alias;\n        } else if (_.isString(lastValue)) {\n          data.value = 0;\n          data.valueFormated = _.escape(lastValue);\n          data.valueRounded = 0;\n        } else {\n          // TODO: avg etc\n          //data.value = this.series[0].stats[this.panel.valueName];\n          data.value = this.series[0].stats.current;\n          data.flotpairs = this.series[0].flotpairs;\n\n          var decimalInfo = this.getDecimalsForValue(data.value);\n          var formatFunc = kbn.valueFormats[this.panel.format];\n          data.valueFormated = formatFunc(data.value, decimalInfo.decimals, decimalInfo.scaledDecimals);\n          data.valueRounded = kbn.roundValue(data.value, decimalInfo.decimals);\n        }\n        //data.trendAvgValue = ctrl.series[0].stats.avg;\n        var previousIndex = this.series[0].datapoints.length - 2;\n        data.previousValue = this.series[0].datapoints[previousIndex][0];\n        var prevDecimalInfo = this.getDecimalsForValue(data.previousValue);\n        var prevFormatFunc = kbn.valueFormats[this.panel.format];\n        data.previousValueFormatted = prevFormatFunc(data.previousValue, prevDecimalInfo.decimals, prevDecimalInfo.scaledDecimals);\n        data.previousValueRounded = kbn.roundValue(data.previousValue, prevDecimalInfo.decimals);\n\n        // calculate change by percentile\n        data.trendPercentage = ((data.value - data.previousValue) / data.previousValue) * 100;\n        data.trendPercentage = kbn.roundValue(data.trendPercentage, prevDecimalInfo.decimals);\n        //debugger;\n        var xstats = this.series[0].stats;\n        data.trendAvgValue = this.series[0].stats.avg;\n        data.trendAvgValueFormatted = prevFormatFunc(data.trendAvgValue, prevDecimalInfo.decimals, prevDecimalInfo.scaledDecimals);\n\n        data.trendAvgPercentage = ((data.value - data.trendAvgValue) / data.trendAvgValue) * 100;\n        data.trendAvgPercentage = kbn.roundValue(data.trendAvgPercentage, prevDecimalInfo.decimals);\n        data.trendTimeStep = this.series[0].stats.timeStep;\n\n        // for previous value trend\n        //data.trendIcon = this.getTrendIcon(data.previousValue, data.value);\n        // for avg value trend\n        data.trendIcon = this.getTrendIcon(data.trendAvgValue, data.value);\n\n        // Add $__name variable for using in prefix or postfix\n        data.scopedVars = _.extend({}, this.panel.scopedVars);\n        data.scopedVars.__name = {value: this.series[0].label};\n      }\n\n      // check value to text mappings if its enabled\n      if (this.panel.mappingType === 1) {\n        for (var i = 0; i < this.panel.valueMaps.length; i++) {\n          var map = this.panel.valueMaps[i];\n          // special null case\n          if (map.value === 'null') {\n            if (data.value === null || data.value === void 0) {\n              data.valueFormated = map.text;\n              return;\n            }\n            continue;\n          }\n\n          // value/number to text mapping\n          var value = parseFloat(map.value);\n          if (value === data.valueRounded) {\n            data.valueFormated = map.text;\n            return;\n          }\n        }\n      } else if (this.panel.mappingType === 2) {\n        for (let i = 0; i < this.panel.rangeMaps.length; i++) {\n          let map = this.panel.rangeMaps[i];\n          // special null case\n          if (map.from === 'null' && map.to === 'null') {\n            if (data.value === null || data.value === void 0) {\n              data.valueFormated = map.text;\n              return;\n            }\n            continue;\n          }\n\n          // value/number to range mapping\n          var from = parseFloat(map.from);\n          var to = parseFloat(map.to);\n          if (to >= data.valueRounded && from <= data.valueRounded) {\n            data.valueFormated = map.text;\n            return;\n          }\n        }\n      }\n\n      if (data.value === null || data.value === void 0) {\n        data.valueFormated = \"no value\";\n      }\n    }\n\n  getValueText() {\n    return this.data.valueFormatted;\n  }\n\n  setUnitFormat(subItem) {\n    this.panel.format = subItem.value;\n    this.render();\n  }\n\n  onDataError(err) {\n    this.onDataReceived([]);\n  }\n\n  onDataReceived(dataList) {\n    this.series = dataList.map(this.seriesHandler.bind(this));\n    var data = {};\n    this.setValues(data);\n    this.data = data;\n    //console.log(\"Data value: \" + data.value + \" formatted: \" + data.valueFormatted + \" rounded: \" + data.valueRounded);\n    // var fmtTxt = kbn.valueFormats[this.panel.format];\n    // console.log(\"Format: \" + fmtTxt);\n    //this.gaugeObject.updateGauge(data.value, data.valueFormatted, data.valueRounded);\n    this.render();\n  }\n\n  seriesHandler(seriesData) {\n    var series = new TimeSeries({\n      datapoints: seriesData.datapoints,\n      alias: seriesData.target,\n    });\n    series.flotpairs = series.getFlotPairs(this.panel.nullPointMode);\n    return series;\n  }\n\n  setColoring(options) {\n    if (options.background) {\n      this.panel.colorValue = false;\n      this.panel.colors = ['rgba(71, 212, 59, 0.4)', 'rgba(245, 150, 40, 0.73)', 'rgba(225, 40, 40, 0.59)'];\n    } else {\n      this.panel.colorBackground = false;\n      this.panel.colors = ['rgba(50, 172, 45, 0.97)', 'rgba(237, 129, 40, 0.89)', 'rgba(245, 54, 54, 0.9)'];\n    }\n    this.render();\n  }\n\n  invertColorOrder() {\n    var tmp = this.panel.colors[0];\n    this.panel.colors[0] = this.panel.colors[2];\n    this.panel.colors[2] = tmp;\n    this.render();\n  }\n\n  invertTrendColorOrder() {\n    var tmp = this.panel.trendstat.colors[0];\n    this.panel.trendstat.colors[0] = this.panel.trendstat.colors[2];\n    this.panel.trendstat.colors[2] = tmp;\n    this.render();\n  }\n\n  getTrendIcon(historicalValue, currentValue) {\n    var icon = \"fa fa-square\";\n    if (currentValue > historicalValue) {\n      icon = \"fa fa-arrow-up\";\n    }\n    if (currentValue < historicalValue) {\n      icon = \"fa fa-arrow-down\";\n    }\n    if (currentValue === historicalValue) {\n      icon = \"fa fa-fw\";\n    }\n    // other icon sets\n    // fa-exclamation-triangle\n    // fa-exclamation-circle\n    // fa-fire\n    // fa-flag\n    // fa-thumbs-up\n    // fa-thumbs-down\n    // fa-chevron-circle-up fa-chevron-circle-down\n    // fa-chevron-up fa-chevron-down\n    // fa-angle-double-down fa-angle-double-up fa-angle-down fa-angle-up\n    // fa-arrow-circle-up fa-arrow-circle-down\n    // fa-arrow-circle-o-up fa-arrow-circle-o-down\n    // fa-caret-up fa-caret-down\n    return icon;\n  }\n\n  getStatusColor(value) {\n    var color = \"yellow\";\n    switch (value) {\n      case 0:\n        color = \"green\";\n        break;\n      case 1:\n        color = \"yellow\";\n        break;\n      case 2:\n        color = \"red\";\n        break;\n      default:\n        color = \"yellow\";\n        break;\n    }\n    return color;\n  }\n\n  convertTime(epoch) {\n    var d = new Date(0);\n    d.setUTCSeconds(epoch);\n    return d.toISOString();\n  }\n\n\n  link(scope, elem, attrs, ctrl) {\n    var $location = this.$location;\n    var linkSrv = this.linkSrv;\n    var $timeout = this.$timeout;\n    var panel = ctrl.panel;\n    var templateSrv = this.templateSrv;\n    var data, linkInfo;\n    var $panelContainer = elem.find('.panel-container');\n    elem = elem.find('.trendstat-panel');\n    var leftSideElem = elem.find('.trendstat-panel-left-side');\n    function setElementHeight() {\n      elem.css('height', ctrl.height + 'px');\n    }\n\n    function render() {\n      if (!ctrl.data) {\n        return;\n      }\n\n      data = ctrl.data;\n      // get thresholds\n      data.thresholds = panel.thresholds.split(',').map(function(strVale) {\n        return Number(strVale.trim());\n      });\n      data.colorMap = panel.colors;\n      //debugger;\n\n      setElementHeight();\n      //var body = panel.gauge.show ? '' : getBigValueHtml();\n      panel.currentValueRaw = data.value;\n      panel.currentValueRounded = data.valueRounded;\n      panel.currentValueFormatted = data.valueFormated;\n      panel.previousValueRaw = data.previousValue;\n      panel.previousValueFormatted = data.previousValueFormatted;\n      panel.previousValueRounded = data.previousValueRounded;\n      panel.trendIcon = data.trendIcon;\n      panel.trendPercentage = data.trendPercentage;\n      panel.trendAvgPercentage = data.trendAvgPercentage;\n      panel.trendAvgValue = data.trendAvgValue;\n      panel.trendAvgValueFormatted = data.trendAvgValueFormatted;\n\n      panel.trendTimeStep = data.trendTimeStep;\n\n      //var meh1 = ctrl.series[0].stats.avg;\n      //var meh2 = ctrl.series[0].stats.current;\n      //debugger;\n\n      if (panel.colorBackground && !isNaN(data.valueRounded)) {\n        let color = getColorForValue(data, data.valueRounded);\n        if (color) {\n          panel.currentValueBackgroundColor = color;\n        }\n      } else {\n        panel.currentValueBackgroundColor = '';\n      }\n\n      if (panel.colorValue && !isNaN(data.valueRounded)) {\n        let color = getColorForValue(data, data.valueRounded);\n        if (color) {\n          panel.valueColor = color;\n        }\n      } else {\n        panel.valueColor = '';\n      }\n\n      $(\".trendstat-panel-left-side-sparklines\").remove();\n      if (panel.sparkline.show) {\n        addSparkline();\n      }\n\n      $(\".trendstat-panel-left-side-gauge\").remove();\n      if (panel.gauge.show) {\n        addGauge();\n      }\n      panel.trendstat.leftSideTimestamp = getCurrentTime();\n      //elem.toggleClass('pointer', panel.links.length > 0);\n\n      //if (panel.links.length > 0) {\n      //  linkInfo = linkSrv.getPanelLinkAnchorInfo(panel.links[0], data.scopedVars);\n      //} else {\n      //  linkInfo = null;\n      //}\n    } // end render()\n\n    function getCurrentTime() {\n      var d = new Date();\n      return d.toISOString();\n    }\n    function applyColoringThresholds(value, valueString) {\n      if (!panel.colorValue) {\n        return valueString;\n      }\n\n      var color = getColorForValue(data, value);\n      if (color) {\n        return '<span style=\"color:' + color + '\">'+ valueString + '</span>';\n      }\n\n      return valueString;\n    }\n\n    function getSpan(className, fontSize, value)  {\n      value = templateSrv.replace(value, data.scopedVars);\n      return '<span class=\"' + className + '\" style=\"font-size:' + fontSize + '\">' +\n        value + '</span>';\n    }\n\n\n    function getBigValueHtml() {\n       var body = '<div class=\"singlestat-panel-value-container\">';\n\n       if (panel.prefix) { body += getSpan('singlestat-panel-prefix', panel.prefixFontSize, panel.prefix); }\n\n       var value = applyColoringThresholds(data.value, data.valueFormated);\n       body += getSpan('singlestat-panel-value', panel.valueFontSize, value);\n\n       if (panel.postfix) { body += getSpan('singlestat-panel-postfix', panel.postfixFontSize, panel.postfix); }\n\n       body += '</div>';\n\n       return body;\n     }\n\n     function getValueText() {\n       var result = panel.prefix ? panel.prefix : '';\n       result += data.valueFormated;\n       result += panel.postfix ? panel.postfix : '';\n\n       return result;\n     }\n\n     function addGauge() {\n         var width = leftSideElem.width();\n         var height = leftSideElem.height();\n\n         ctrl.invalidGaugeRange = false;\n         if (panel.gauge.minValue > panel.gauge.maxValue) {\n           ctrl.invalidGaugeRange = true;\n           return;\n         }\n         // delete the old gauge if it exits\n         $(\".trendstat-panel-left-side-gauge\").remove();\n\n         var plotCanvas = $('<div class=\"trendstat-panel-left-side-gauge\"></div>');\n\n         var plotCss = {\n           top: '10px',\n           margin: 'auto',\n           position: 'absolute',\n           height: (height * 0.9) + 'px',\n           width:  width + 'px'\n         };\n\n         plotCanvas.css(plotCss);\n\n         var thresholds = [];\n         for (var i = 0; i < data.thresholds.length; i++) {\n           thresholds.push({\n             value: data.thresholds[i],\n             color: data.colorMap[i]\n           });\n         }\n         thresholds.push({\n           value: panel.gauge.maxValue,\n           color: data.colorMap[data.colorMap.length  - 1]\n         });\n\n         var bgColor = config.bootData.user.lightTheme ? 'rgb(230,230,230)' : 'rgb(38,38,38)';\n         var fontScale = parseInt(panel.valueFontSize) / 100;\n         var dimension = Math.min(width, height);\n         var fontSize = Math.min(dimension/5, 100) * fontScale;\n         var gaugeWidth = Math.min(dimension/6, 60);\n         var thresholdMarkersWidth = gaugeWidth/5;\n\n         var options = {\n           series: {\n             gauges: {\n               gauge: {\n                 min: panel.gauge.minValue,\n                 max: panel.gauge.maxValue,\n                 background: { color: bgColor },\n                 border: { color: null },\n                 shadow: { show: false },\n                 width: gaugeWidth,\n                 height: height,\n               },\n               frame: { show: false },\n               label: { show: false },\n               layout: { margin: 0, thresholdWidth: 0 },\n               cell: { border: { width: 0 } },\n               threshold: {\n                 values: thresholds,\n                 label: {\n                   show: panel.gauge.thresholdLabels,\n                   margin: 8,\n                   font: { size: 18 }\n                 },\n                 show: panel.gauge.thresholdMarkers,\n                 width: thresholdMarkersWidth,\n               },\n               value: {\n                 color: panel.colorValue ? getColorForValue(data, data.valueRounded) : null,\n                 formatter: function() { return getValueText(); },\n                 font: { size: fontSize, family: '\"Helvetica Neue\", Helvetica, Arial, sans-serif' }\n               },\n               show: true\n             }\n           }\n         };\n\n         leftSideElem.append(plotCanvas);\n\n         var plotSeries = {\n           data: [[0, data.valueRounded]]\n         };\n         $.plot(plotCanvas, [plotSeries], options);\n       }\n\n     function addSparkline() {\n           var width = leftSideElem.width() + 20;\n           if (width < 30) {\n             // element has not gotten it's width yet\n             // delay sparkline render\n             setTimeout(addSparkline, 30);\n             return;\n           }\n           // delete the old sparkline if it exits\n           $(\".trendstat-panel-left-side-sparklines\").remove();\n           var height = ctrl.height;\n           var plotCanvas = $('<div class=\"trendstat-panel-left-side-sparklines\"></div>');\n           var plotCss = {};\n           plotCss.position = 'absolute';\n\n           if (panel.sparkline.full) {\n             plotCss.bottom = '5px';\n             plotCss.left = '-5px';\n             plotCss.width = (width - 10) + 'px';\n             var dynamicHeightMargin = height <= 100 ? 5 : (Math.round((height/100)) * 15) + 5;\n             plotCss.height = (height - dynamicHeightMargin) + 'px';\n           } else {\n             plotCss.bottom = \"0px\";\n             plotCss.left = \"-5px\";\n             plotCss.width = (width - 10) + 'px';\n             plotCss.height = Math.floor(height * 0.25) + \"px\";\n           }\n\n           plotCanvas.css(plotCss);\n\n           var options = {\n             legend: { show: false },\n             series: {\n               lines:  {\n                 show: true,\n                 fill: 1,\n                 lineWidth: 1,\n                 fillColor: panel.sparkline.fillColor,\n               },\n             },\n             yaxes: { show: false },\n             xaxis: {\n               show: false,\n               mode: \"time\",\n               min: ctrl.range.from.valueOf(),\n               max: ctrl.range.to.valueOf(),\n             },\n             grid: { hoverable: false, show: false },\n           };\n\n           leftSideElem.append(plotCanvas);\n\n           var plotSeries = {\n             data: data.flotpairs,\n             color: panel.sparkline.lineColor\n           };\n\n           $.plot(plotCanvas, [plotSeries], options);\n         }\n\n         this.events.on('render', function() {\n               render();\n               ctrl.renderingCompleted();\n             });\n  }\n}\n\nfunction getColorForValue(data, value) {\n  for (var i = data.thresholds.length; i > 0; i--) {\n    if (value >= data.thresholds[i - 1]) {\n      return data.colorMap[i];\n    }\n  }\n  return _.first(data.colorMap);\n}\n\nTrendStatPanelCtrl.templateUrl = 'partials/template.html';\n"]}